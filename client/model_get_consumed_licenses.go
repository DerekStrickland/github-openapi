/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// GetConsumedLicenses A breakdown of the licenses consumed by an enterprise.
type GetConsumedLicenses struct {
	TotalSeatsConsumed *int32 `json:"total_seats_consumed,omitempty"`
	TotalSeatsPurchased *int32 `json:"total_seats_purchased,omitempty"`
	Users []GetConsumedLicensesUsersInner `json:"users,omitempty"`
}

// NewGetConsumedLicenses instantiates a new GetConsumedLicenses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConsumedLicenses() *GetConsumedLicenses {
	this := GetConsumedLicenses{}
	return &this
}

// NewGetConsumedLicensesWithDefaults instantiates a new GetConsumedLicenses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConsumedLicensesWithDefaults() *GetConsumedLicenses {
	this := GetConsumedLicenses{}
	return &this
}

// GetTotalSeatsConsumed returns the TotalSeatsConsumed field value if set, zero value otherwise.
func (o *GetConsumedLicenses) GetTotalSeatsConsumed() int32 {
	if o == nil || o.TotalSeatsConsumed == nil {
		var ret int32
		return ret
	}
	return *o.TotalSeatsConsumed
}

// GetTotalSeatsConsumedOk returns a tuple with the TotalSeatsConsumed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicenses) GetTotalSeatsConsumedOk() (*int32, bool) {
	if o == nil || o.TotalSeatsConsumed == nil {
		return nil, false
	}
	return o.TotalSeatsConsumed, true
}

// HasTotalSeatsConsumed returns a boolean if a field has been set.
func (o *GetConsumedLicenses) HasTotalSeatsConsumed() bool {
	if o != nil && o.TotalSeatsConsumed != nil {
		return true
	}

	return false
}

// SetTotalSeatsConsumed gets a reference to the given int32 and assigns it to the TotalSeatsConsumed field.
func (o *GetConsumedLicenses) SetTotalSeatsConsumed(v int32) {
	o.TotalSeatsConsumed = &v
}

// GetTotalSeatsPurchased returns the TotalSeatsPurchased field value if set, zero value otherwise.
func (o *GetConsumedLicenses) GetTotalSeatsPurchased() int32 {
	if o == nil || o.TotalSeatsPurchased == nil {
		var ret int32
		return ret
	}
	return *o.TotalSeatsPurchased
}

// GetTotalSeatsPurchasedOk returns a tuple with the TotalSeatsPurchased field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicenses) GetTotalSeatsPurchasedOk() (*int32, bool) {
	if o == nil || o.TotalSeatsPurchased == nil {
		return nil, false
	}
	return o.TotalSeatsPurchased, true
}

// HasTotalSeatsPurchased returns a boolean if a field has been set.
func (o *GetConsumedLicenses) HasTotalSeatsPurchased() bool {
	if o != nil && o.TotalSeatsPurchased != nil {
		return true
	}

	return false
}

// SetTotalSeatsPurchased gets a reference to the given int32 and assigns it to the TotalSeatsPurchased field.
func (o *GetConsumedLicenses) SetTotalSeatsPurchased(v int32) {
	o.TotalSeatsPurchased = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *GetConsumedLicenses) GetUsers() []GetConsumedLicensesUsersInner {
	if o == nil || o.Users == nil {
		var ret []GetConsumedLicensesUsersInner
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicenses) GetUsersOk() ([]GetConsumedLicensesUsersInner, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *GetConsumedLicenses) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []GetConsumedLicensesUsersInner and assigns it to the Users field.
func (o *GetConsumedLicenses) SetUsers(v []GetConsumedLicensesUsersInner) {
	o.Users = v
}

func (o GetConsumedLicenses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalSeatsConsumed != nil {
		toSerialize["total_seats_consumed"] = o.TotalSeatsConsumed
	}
	if o.TotalSeatsPurchased != nil {
		toSerialize["total_seats_purchased"] = o.TotalSeatsPurchased
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableGetConsumedLicenses struct {
	value *GetConsumedLicenses
	isSet bool
}

func (v NullableGetConsumedLicenses) Get() *GetConsumedLicenses {
	return v.value
}

func (v *NullableGetConsumedLicenses) Set(val *GetConsumedLicenses) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConsumedLicenses) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConsumedLicenses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConsumedLicenses(val *GetConsumedLicenses) *NullableGetConsumedLicenses {
	return &NullableGetConsumedLicenses{value: val, isSet: true}
}

func (v NullableGetConsumedLicenses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConsumedLicenses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



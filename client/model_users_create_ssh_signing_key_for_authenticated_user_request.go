/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// UsersCreateSshSigningKeyForAuthenticatedUserRequest struct for UsersCreateSshSigningKeyForAuthenticatedUserRequest
type UsersCreateSshSigningKeyForAuthenticatedUserRequest struct {
	// A descriptive name for the new key.
	Title *string `json:"title,omitempty"`
	// The public SSH key to add to your GitHub account. For more information, see \"[Checking for existing SSH keys](https://docs.github.com/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys).\"
	Key string `json:"key"`
}

// NewUsersCreateSshSigningKeyForAuthenticatedUserRequest instantiates a new UsersCreateSshSigningKeyForAuthenticatedUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersCreateSshSigningKeyForAuthenticatedUserRequest(key string) *UsersCreateSshSigningKeyForAuthenticatedUserRequest {
	this := UsersCreateSshSigningKeyForAuthenticatedUserRequest{}
	this.Key = key
	return &this
}

// NewUsersCreateSshSigningKeyForAuthenticatedUserRequestWithDefaults instantiates a new UsersCreateSshSigningKeyForAuthenticatedUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersCreateSshSigningKeyForAuthenticatedUserRequestWithDefaults() *UsersCreateSshSigningKeyForAuthenticatedUserRequest {
	this := UsersCreateSshSigningKeyForAuthenticatedUserRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UsersCreateSshSigningKeyForAuthenticatedUserRequest) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersCreateSshSigningKeyForAuthenticatedUserRequest) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UsersCreateSshSigningKeyForAuthenticatedUserRequest) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UsersCreateSshSigningKeyForAuthenticatedUserRequest) SetTitle(v string) {
	o.Title = &v
}

// GetKey returns the Key field value
func (o *UsersCreateSshSigningKeyForAuthenticatedUserRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *UsersCreateSshSigningKeyForAuthenticatedUserRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *UsersCreateSshSigningKeyForAuthenticatedUserRequest) SetKey(v string) {
	o.Key = v
}

func (o UsersCreateSshSigningKeyForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableUsersCreateSshSigningKeyForAuthenticatedUserRequest struct {
	value *UsersCreateSshSigningKeyForAuthenticatedUserRequest
	isSet bool
}

func (v NullableUsersCreateSshSigningKeyForAuthenticatedUserRequest) Get() *UsersCreateSshSigningKeyForAuthenticatedUserRequest {
	return v.value
}

func (v *NullableUsersCreateSshSigningKeyForAuthenticatedUserRequest) Set(val *UsersCreateSshSigningKeyForAuthenticatedUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersCreateSshSigningKeyForAuthenticatedUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersCreateSshSigningKeyForAuthenticatedUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersCreateSshSigningKeyForAuthenticatedUserRequest(val *UsersCreateSshSigningKeyForAuthenticatedUserRequest) *NullableUsersCreateSshSigningKeyForAuthenticatedUserRequest {
	return &NullableUsersCreateSshSigningKeyForAuthenticatedUserRequest{value: val, isSet: true}
}

func (v NullableUsersCreateSshSigningKeyForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersCreateSshSigningKeyForAuthenticatedUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



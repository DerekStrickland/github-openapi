/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// GetLicenseSyncStatus Information about the status of a license sync job for an enterprise.
type GetLicenseSyncStatus struct {
	ServerInstances []GetLicenseSyncStatusServerInstancesInner `json:"server_instances,omitempty"`
}

// NewGetLicenseSyncStatus instantiates a new GetLicenseSyncStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLicenseSyncStatus() *GetLicenseSyncStatus {
	this := GetLicenseSyncStatus{}
	return &this
}

// NewGetLicenseSyncStatusWithDefaults instantiates a new GetLicenseSyncStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLicenseSyncStatusWithDefaults() *GetLicenseSyncStatus {
	this := GetLicenseSyncStatus{}
	return &this
}

// GetServerInstances returns the ServerInstances field value if set, zero value otherwise.
func (o *GetLicenseSyncStatus) GetServerInstances() []GetLicenseSyncStatusServerInstancesInner {
	if o == nil || o.ServerInstances == nil {
		var ret []GetLicenseSyncStatusServerInstancesInner
		return ret
	}
	return o.ServerInstances
}

// GetServerInstancesOk returns a tuple with the ServerInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLicenseSyncStatus) GetServerInstancesOk() ([]GetLicenseSyncStatusServerInstancesInner, bool) {
	if o == nil || o.ServerInstances == nil {
		return nil, false
	}
	return o.ServerInstances, true
}

// HasServerInstances returns a boolean if a field has been set.
func (o *GetLicenseSyncStatus) HasServerInstances() bool {
	if o != nil && o.ServerInstances != nil {
		return true
	}

	return false
}

// SetServerInstances gets a reference to the given []GetLicenseSyncStatusServerInstancesInner and assigns it to the ServerInstances field.
func (o *GetLicenseSyncStatus) SetServerInstances(v []GetLicenseSyncStatusServerInstancesInner) {
	o.ServerInstances = v
}

func (o GetLicenseSyncStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServerInstances != nil {
		toSerialize["server_instances"] = o.ServerInstances
	}
	return json.Marshal(toSerialize)
}

type NullableGetLicenseSyncStatus struct {
	value *GetLicenseSyncStatus
	isSet bool
}

func (v NullableGetLicenseSyncStatus) Get() *GetLicenseSyncStatus {
	return v.value
}

func (v *NullableGetLicenseSyncStatus) Set(val *GetLicenseSyncStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLicenseSyncStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLicenseSyncStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLicenseSyncStatus(val *GetLicenseSyncStatus) *NullableGetLicenseSyncStatus {
	return &NullableGetLicenseSyncStatus{value: val, isSet: true}
}

func (v NullableGetLicenseSyncStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLicenseSyncStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



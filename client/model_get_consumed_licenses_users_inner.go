/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// GetConsumedLicensesUsersInner struct for GetConsumedLicensesUsersInner
type GetConsumedLicensesUsersInner struct {
	GithubComLogin *string `json:"github_com_login,omitempty"`
	GithubComName NullableString `json:"github_com_name,omitempty"`
	GithubComProfile NullableString `json:"github_com_profile,omitempty"`
	LicenseType *string `json:"license_type,omitempty"`
	GithubComMemberRoles []string `json:"github_com_member_roles,omitempty"`
	GithubComEnterpriseRole NullableString `json:"github_com_enterprise_role,omitempty"`
	VisualStudioSubscriptionUser *bool `json:"visual_studio_subscription_user,omitempty"`
	GithubComVerifiedDomainEmails []string `json:"github_com_verified_domain_emails,omitempty"`
	GithubComSamlNameId NullableString `json:"github_com_saml_name_id,omitempty"`
	EnterpriseServerUser NullableBool `json:"enterprise_server_user,omitempty"`
	EnterpriseServerEmails []string `json:"enterprise_server_emails,omitempty"`
	GithubComUser *bool `json:"github_com_user,omitempty"`
	TotalUserAccounts *int32 `json:"total_user_accounts,omitempty"`
	EnterpriseServerUserIds []string `json:"enterprise_server_user_ids,omitempty"`
	GithubComOrgsWithPendingInvites []string `json:"github_com_orgs_with_pending_invites,omitempty"`
	VisualStudioSubscriptionEmail NullableString `json:"visual_studio_subscription_email,omitempty"`
}

// NewGetConsumedLicensesUsersInner instantiates a new GetConsumedLicensesUsersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConsumedLicensesUsersInner() *GetConsumedLicensesUsersInner {
	this := GetConsumedLicensesUsersInner{}
	return &this
}

// NewGetConsumedLicensesUsersInnerWithDefaults instantiates a new GetConsumedLicensesUsersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConsumedLicensesUsersInnerWithDefaults() *GetConsumedLicensesUsersInner {
	this := GetConsumedLicensesUsersInner{}
	return &this
}

// GetGithubComLogin returns the GithubComLogin field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetGithubComLogin() string {
	if o == nil || o.GithubComLogin == nil {
		var ret string
		return ret
	}
	return *o.GithubComLogin
}

// GetGithubComLoginOk returns a tuple with the GithubComLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetGithubComLoginOk() (*string, bool) {
	if o == nil || o.GithubComLogin == nil {
		return nil, false
	}
	return o.GithubComLogin, true
}

// HasGithubComLogin returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasGithubComLogin() bool {
	if o != nil && o.GithubComLogin != nil {
		return true
	}

	return false
}

// SetGithubComLogin gets a reference to the given string and assigns it to the GithubComLogin field.
func (o *GetConsumedLicensesUsersInner) SetGithubComLogin(v string) {
	o.GithubComLogin = &v
}

// GetGithubComName returns the GithubComName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetConsumedLicensesUsersInner) GetGithubComName() string {
	if o == nil || o.GithubComName.Get() == nil {
		var ret string
		return ret
	}
	return *o.GithubComName.Get()
}

// GetGithubComNameOk returns a tuple with the GithubComName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetConsumedLicensesUsersInner) GetGithubComNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GithubComName.Get(), o.GithubComName.IsSet()
}

// HasGithubComName returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasGithubComName() bool {
	if o != nil && o.GithubComName.IsSet() {
		return true
	}

	return false
}

// SetGithubComName gets a reference to the given NullableString and assigns it to the GithubComName field.
func (o *GetConsumedLicensesUsersInner) SetGithubComName(v string) {
	o.GithubComName.Set(&v)
}
// SetGithubComNameNil sets the value for GithubComName to be an explicit nil
func (o *GetConsumedLicensesUsersInner) SetGithubComNameNil() {
	o.GithubComName.Set(nil)
}

// UnsetGithubComName ensures that no value is present for GithubComName, not even an explicit nil
func (o *GetConsumedLicensesUsersInner) UnsetGithubComName() {
	o.GithubComName.Unset()
}

// GetGithubComProfile returns the GithubComProfile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetConsumedLicensesUsersInner) GetGithubComProfile() string {
	if o == nil || o.GithubComProfile.Get() == nil {
		var ret string
		return ret
	}
	return *o.GithubComProfile.Get()
}

// GetGithubComProfileOk returns a tuple with the GithubComProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetConsumedLicensesUsersInner) GetGithubComProfileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GithubComProfile.Get(), o.GithubComProfile.IsSet()
}

// HasGithubComProfile returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasGithubComProfile() bool {
	if o != nil && o.GithubComProfile.IsSet() {
		return true
	}

	return false
}

// SetGithubComProfile gets a reference to the given NullableString and assigns it to the GithubComProfile field.
func (o *GetConsumedLicensesUsersInner) SetGithubComProfile(v string) {
	o.GithubComProfile.Set(&v)
}
// SetGithubComProfileNil sets the value for GithubComProfile to be an explicit nil
func (o *GetConsumedLicensesUsersInner) SetGithubComProfileNil() {
	o.GithubComProfile.Set(nil)
}

// UnsetGithubComProfile ensures that no value is present for GithubComProfile, not even an explicit nil
func (o *GetConsumedLicensesUsersInner) UnsetGithubComProfile() {
	o.GithubComProfile.Unset()
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetLicenseType() string {
	if o == nil || o.LicenseType == nil {
		var ret string
		return ret
	}
	return *o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetLicenseTypeOk() (*string, bool) {
	if o == nil || o.LicenseType == nil {
		return nil, false
	}
	return o.LicenseType, true
}

// HasLicenseType returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasLicenseType() bool {
	if o != nil && o.LicenseType != nil {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given string and assigns it to the LicenseType field.
func (o *GetConsumedLicensesUsersInner) SetLicenseType(v string) {
	o.LicenseType = &v
}

// GetGithubComMemberRoles returns the GithubComMemberRoles field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetGithubComMemberRoles() []string {
	if o == nil || o.GithubComMemberRoles == nil {
		var ret []string
		return ret
	}
	return o.GithubComMemberRoles
}

// GetGithubComMemberRolesOk returns a tuple with the GithubComMemberRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetGithubComMemberRolesOk() ([]string, bool) {
	if o == nil || o.GithubComMemberRoles == nil {
		return nil, false
	}
	return o.GithubComMemberRoles, true
}

// HasGithubComMemberRoles returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasGithubComMemberRoles() bool {
	if o != nil && o.GithubComMemberRoles != nil {
		return true
	}

	return false
}

// SetGithubComMemberRoles gets a reference to the given []string and assigns it to the GithubComMemberRoles field.
func (o *GetConsumedLicensesUsersInner) SetGithubComMemberRoles(v []string) {
	o.GithubComMemberRoles = v
}

// GetGithubComEnterpriseRole returns the GithubComEnterpriseRole field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetConsumedLicensesUsersInner) GetGithubComEnterpriseRole() string {
	if o == nil || o.GithubComEnterpriseRole.Get() == nil {
		var ret string
		return ret
	}
	return *o.GithubComEnterpriseRole.Get()
}

// GetGithubComEnterpriseRoleOk returns a tuple with the GithubComEnterpriseRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetConsumedLicensesUsersInner) GetGithubComEnterpriseRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GithubComEnterpriseRole.Get(), o.GithubComEnterpriseRole.IsSet()
}

// HasGithubComEnterpriseRole returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasGithubComEnterpriseRole() bool {
	if o != nil && o.GithubComEnterpriseRole.IsSet() {
		return true
	}

	return false
}

// SetGithubComEnterpriseRole gets a reference to the given NullableString and assigns it to the GithubComEnterpriseRole field.
func (o *GetConsumedLicensesUsersInner) SetGithubComEnterpriseRole(v string) {
	o.GithubComEnterpriseRole.Set(&v)
}
// SetGithubComEnterpriseRoleNil sets the value for GithubComEnterpriseRole to be an explicit nil
func (o *GetConsumedLicensesUsersInner) SetGithubComEnterpriseRoleNil() {
	o.GithubComEnterpriseRole.Set(nil)
}

// UnsetGithubComEnterpriseRole ensures that no value is present for GithubComEnterpriseRole, not even an explicit nil
func (o *GetConsumedLicensesUsersInner) UnsetGithubComEnterpriseRole() {
	o.GithubComEnterpriseRole.Unset()
}

// GetVisualStudioSubscriptionUser returns the VisualStudioSubscriptionUser field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetVisualStudioSubscriptionUser() bool {
	if o == nil || o.VisualStudioSubscriptionUser == nil {
		var ret bool
		return ret
	}
	return *o.VisualStudioSubscriptionUser
}

// GetVisualStudioSubscriptionUserOk returns a tuple with the VisualStudioSubscriptionUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetVisualStudioSubscriptionUserOk() (*bool, bool) {
	if o == nil || o.VisualStudioSubscriptionUser == nil {
		return nil, false
	}
	return o.VisualStudioSubscriptionUser, true
}

// HasVisualStudioSubscriptionUser returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasVisualStudioSubscriptionUser() bool {
	if o != nil && o.VisualStudioSubscriptionUser != nil {
		return true
	}

	return false
}

// SetVisualStudioSubscriptionUser gets a reference to the given bool and assigns it to the VisualStudioSubscriptionUser field.
func (o *GetConsumedLicensesUsersInner) SetVisualStudioSubscriptionUser(v bool) {
	o.VisualStudioSubscriptionUser = &v
}

// GetGithubComVerifiedDomainEmails returns the GithubComVerifiedDomainEmails field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetGithubComVerifiedDomainEmails() []string {
	if o == nil || o.GithubComVerifiedDomainEmails == nil {
		var ret []string
		return ret
	}
	return o.GithubComVerifiedDomainEmails
}

// GetGithubComVerifiedDomainEmailsOk returns a tuple with the GithubComVerifiedDomainEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetGithubComVerifiedDomainEmailsOk() ([]string, bool) {
	if o == nil || o.GithubComVerifiedDomainEmails == nil {
		return nil, false
	}
	return o.GithubComVerifiedDomainEmails, true
}

// HasGithubComVerifiedDomainEmails returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasGithubComVerifiedDomainEmails() bool {
	if o != nil && o.GithubComVerifiedDomainEmails != nil {
		return true
	}

	return false
}

// SetGithubComVerifiedDomainEmails gets a reference to the given []string and assigns it to the GithubComVerifiedDomainEmails field.
func (o *GetConsumedLicensesUsersInner) SetGithubComVerifiedDomainEmails(v []string) {
	o.GithubComVerifiedDomainEmails = v
}

// GetGithubComSamlNameId returns the GithubComSamlNameId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetConsumedLicensesUsersInner) GetGithubComSamlNameId() string {
	if o == nil || o.GithubComSamlNameId.Get() == nil {
		var ret string
		return ret
	}
	return *o.GithubComSamlNameId.Get()
}

// GetGithubComSamlNameIdOk returns a tuple with the GithubComSamlNameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetConsumedLicensesUsersInner) GetGithubComSamlNameIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GithubComSamlNameId.Get(), o.GithubComSamlNameId.IsSet()
}

// HasGithubComSamlNameId returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasGithubComSamlNameId() bool {
	if o != nil && o.GithubComSamlNameId.IsSet() {
		return true
	}

	return false
}

// SetGithubComSamlNameId gets a reference to the given NullableString and assigns it to the GithubComSamlNameId field.
func (o *GetConsumedLicensesUsersInner) SetGithubComSamlNameId(v string) {
	o.GithubComSamlNameId.Set(&v)
}
// SetGithubComSamlNameIdNil sets the value for GithubComSamlNameId to be an explicit nil
func (o *GetConsumedLicensesUsersInner) SetGithubComSamlNameIdNil() {
	o.GithubComSamlNameId.Set(nil)
}

// UnsetGithubComSamlNameId ensures that no value is present for GithubComSamlNameId, not even an explicit nil
func (o *GetConsumedLicensesUsersInner) UnsetGithubComSamlNameId() {
	o.GithubComSamlNameId.Unset()
}

// GetEnterpriseServerUser returns the EnterpriseServerUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetConsumedLicensesUsersInner) GetEnterpriseServerUser() bool {
	if o == nil || o.EnterpriseServerUser.Get() == nil {
		var ret bool
		return ret
	}
	return *o.EnterpriseServerUser.Get()
}

// GetEnterpriseServerUserOk returns a tuple with the EnterpriseServerUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetConsumedLicensesUsersInner) GetEnterpriseServerUserOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnterpriseServerUser.Get(), o.EnterpriseServerUser.IsSet()
}

// HasEnterpriseServerUser returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasEnterpriseServerUser() bool {
	if o != nil && o.EnterpriseServerUser.IsSet() {
		return true
	}

	return false
}

// SetEnterpriseServerUser gets a reference to the given NullableBool and assigns it to the EnterpriseServerUser field.
func (o *GetConsumedLicensesUsersInner) SetEnterpriseServerUser(v bool) {
	o.EnterpriseServerUser.Set(&v)
}
// SetEnterpriseServerUserNil sets the value for EnterpriseServerUser to be an explicit nil
func (o *GetConsumedLicensesUsersInner) SetEnterpriseServerUserNil() {
	o.EnterpriseServerUser.Set(nil)
}

// UnsetEnterpriseServerUser ensures that no value is present for EnterpriseServerUser, not even an explicit nil
func (o *GetConsumedLicensesUsersInner) UnsetEnterpriseServerUser() {
	o.EnterpriseServerUser.Unset()
}

// GetEnterpriseServerEmails returns the EnterpriseServerEmails field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetEnterpriseServerEmails() []string {
	if o == nil || o.EnterpriseServerEmails == nil {
		var ret []string
		return ret
	}
	return o.EnterpriseServerEmails
}

// GetEnterpriseServerEmailsOk returns a tuple with the EnterpriseServerEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetEnterpriseServerEmailsOk() ([]string, bool) {
	if o == nil || o.EnterpriseServerEmails == nil {
		return nil, false
	}
	return o.EnterpriseServerEmails, true
}

// HasEnterpriseServerEmails returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasEnterpriseServerEmails() bool {
	if o != nil && o.EnterpriseServerEmails != nil {
		return true
	}

	return false
}

// SetEnterpriseServerEmails gets a reference to the given []string and assigns it to the EnterpriseServerEmails field.
func (o *GetConsumedLicensesUsersInner) SetEnterpriseServerEmails(v []string) {
	o.EnterpriseServerEmails = v
}

// GetGithubComUser returns the GithubComUser field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetGithubComUser() bool {
	if o == nil || o.GithubComUser == nil {
		var ret bool
		return ret
	}
	return *o.GithubComUser
}

// GetGithubComUserOk returns a tuple with the GithubComUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetGithubComUserOk() (*bool, bool) {
	if o == nil || o.GithubComUser == nil {
		return nil, false
	}
	return o.GithubComUser, true
}

// HasGithubComUser returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasGithubComUser() bool {
	if o != nil && o.GithubComUser != nil {
		return true
	}

	return false
}

// SetGithubComUser gets a reference to the given bool and assigns it to the GithubComUser field.
func (o *GetConsumedLicensesUsersInner) SetGithubComUser(v bool) {
	o.GithubComUser = &v
}

// GetTotalUserAccounts returns the TotalUserAccounts field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetTotalUserAccounts() int32 {
	if o == nil || o.TotalUserAccounts == nil {
		var ret int32
		return ret
	}
	return *o.TotalUserAccounts
}

// GetTotalUserAccountsOk returns a tuple with the TotalUserAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetTotalUserAccountsOk() (*int32, bool) {
	if o == nil || o.TotalUserAccounts == nil {
		return nil, false
	}
	return o.TotalUserAccounts, true
}

// HasTotalUserAccounts returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasTotalUserAccounts() bool {
	if o != nil && o.TotalUserAccounts != nil {
		return true
	}

	return false
}

// SetTotalUserAccounts gets a reference to the given int32 and assigns it to the TotalUserAccounts field.
func (o *GetConsumedLicensesUsersInner) SetTotalUserAccounts(v int32) {
	o.TotalUserAccounts = &v
}

// GetEnterpriseServerUserIds returns the EnterpriseServerUserIds field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetEnterpriseServerUserIds() []string {
	if o == nil || o.EnterpriseServerUserIds == nil {
		var ret []string
		return ret
	}
	return o.EnterpriseServerUserIds
}

// GetEnterpriseServerUserIdsOk returns a tuple with the EnterpriseServerUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetEnterpriseServerUserIdsOk() ([]string, bool) {
	if o == nil || o.EnterpriseServerUserIds == nil {
		return nil, false
	}
	return o.EnterpriseServerUserIds, true
}

// HasEnterpriseServerUserIds returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasEnterpriseServerUserIds() bool {
	if o != nil && o.EnterpriseServerUserIds != nil {
		return true
	}

	return false
}

// SetEnterpriseServerUserIds gets a reference to the given []string and assigns it to the EnterpriseServerUserIds field.
func (o *GetConsumedLicensesUsersInner) SetEnterpriseServerUserIds(v []string) {
	o.EnterpriseServerUserIds = v
}

// GetGithubComOrgsWithPendingInvites returns the GithubComOrgsWithPendingInvites field value if set, zero value otherwise.
func (o *GetConsumedLicensesUsersInner) GetGithubComOrgsWithPendingInvites() []string {
	if o == nil || o.GithubComOrgsWithPendingInvites == nil {
		var ret []string
		return ret
	}
	return o.GithubComOrgsWithPendingInvites
}

// GetGithubComOrgsWithPendingInvitesOk returns a tuple with the GithubComOrgsWithPendingInvites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConsumedLicensesUsersInner) GetGithubComOrgsWithPendingInvitesOk() ([]string, bool) {
	if o == nil || o.GithubComOrgsWithPendingInvites == nil {
		return nil, false
	}
	return o.GithubComOrgsWithPendingInvites, true
}

// HasGithubComOrgsWithPendingInvites returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasGithubComOrgsWithPendingInvites() bool {
	if o != nil && o.GithubComOrgsWithPendingInvites != nil {
		return true
	}

	return false
}

// SetGithubComOrgsWithPendingInvites gets a reference to the given []string and assigns it to the GithubComOrgsWithPendingInvites field.
func (o *GetConsumedLicensesUsersInner) SetGithubComOrgsWithPendingInvites(v []string) {
	o.GithubComOrgsWithPendingInvites = v
}

// GetVisualStudioSubscriptionEmail returns the VisualStudioSubscriptionEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetConsumedLicensesUsersInner) GetVisualStudioSubscriptionEmail() string {
	if o == nil || o.VisualStudioSubscriptionEmail.Get() == nil {
		var ret string
		return ret
	}
	return *o.VisualStudioSubscriptionEmail.Get()
}

// GetVisualStudioSubscriptionEmailOk returns a tuple with the VisualStudioSubscriptionEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetConsumedLicensesUsersInner) GetVisualStudioSubscriptionEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VisualStudioSubscriptionEmail.Get(), o.VisualStudioSubscriptionEmail.IsSet()
}

// HasVisualStudioSubscriptionEmail returns a boolean if a field has been set.
func (o *GetConsumedLicensesUsersInner) HasVisualStudioSubscriptionEmail() bool {
	if o != nil && o.VisualStudioSubscriptionEmail.IsSet() {
		return true
	}

	return false
}

// SetVisualStudioSubscriptionEmail gets a reference to the given NullableString and assigns it to the VisualStudioSubscriptionEmail field.
func (o *GetConsumedLicensesUsersInner) SetVisualStudioSubscriptionEmail(v string) {
	o.VisualStudioSubscriptionEmail.Set(&v)
}
// SetVisualStudioSubscriptionEmailNil sets the value for VisualStudioSubscriptionEmail to be an explicit nil
func (o *GetConsumedLicensesUsersInner) SetVisualStudioSubscriptionEmailNil() {
	o.VisualStudioSubscriptionEmail.Set(nil)
}

// UnsetVisualStudioSubscriptionEmail ensures that no value is present for VisualStudioSubscriptionEmail, not even an explicit nil
func (o *GetConsumedLicensesUsersInner) UnsetVisualStudioSubscriptionEmail() {
	o.VisualStudioSubscriptionEmail.Unset()
}

func (o GetConsumedLicensesUsersInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GithubComLogin != nil {
		toSerialize["github_com_login"] = o.GithubComLogin
	}
	if o.GithubComName.IsSet() {
		toSerialize["github_com_name"] = o.GithubComName.Get()
	}
	if o.GithubComProfile.IsSet() {
		toSerialize["github_com_profile"] = o.GithubComProfile.Get()
	}
	if o.LicenseType != nil {
		toSerialize["license_type"] = o.LicenseType
	}
	if o.GithubComMemberRoles != nil {
		toSerialize["github_com_member_roles"] = o.GithubComMemberRoles
	}
	if o.GithubComEnterpriseRole.IsSet() {
		toSerialize["github_com_enterprise_role"] = o.GithubComEnterpriseRole.Get()
	}
	if o.VisualStudioSubscriptionUser != nil {
		toSerialize["visual_studio_subscription_user"] = o.VisualStudioSubscriptionUser
	}
	if o.GithubComVerifiedDomainEmails != nil {
		toSerialize["github_com_verified_domain_emails"] = o.GithubComVerifiedDomainEmails
	}
	if o.GithubComSamlNameId.IsSet() {
		toSerialize["github_com_saml_name_id"] = o.GithubComSamlNameId.Get()
	}
	if o.EnterpriseServerUser.IsSet() {
		toSerialize["enterprise_server_user"] = o.EnterpriseServerUser.Get()
	}
	if o.EnterpriseServerEmails != nil {
		toSerialize["enterprise_server_emails"] = o.EnterpriseServerEmails
	}
	if o.GithubComUser != nil {
		toSerialize["github_com_user"] = o.GithubComUser
	}
	if o.TotalUserAccounts != nil {
		toSerialize["total_user_accounts"] = o.TotalUserAccounts
	}
	if o.EnterpriseServerUserIds != nil {
		toSerialize["enterprise_server_user_ids"] = o.EnterpriseServerUserIds
	}
	if o.GithubComOrgsWithPendingInvites != nil {
		toSerialize["github_com_orgs_with_pending_invites"] = o.GithubComOrgsWithPendingInvites
	}
	if o.VisualStudioSubscriptionEmail.IsSet() {
		toSerialize["visual_studio_subscription_email"] = o.VisualStudioSubscriptionEmail.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGetConsumedLicensesUsersInner struct {
	value *GetConsumedLicensesUsersInner
	isSet bool
}

func (v NullableGetConsumedLicensesUsersInner) Get() *GetConsumedLicensesUsersInner {
	return v.value
}

func (v *NullableGetConsumedLicensesUsersInner) Set(val *GetConsumedLicensesUsersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConsumedLicensesUsersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConsumedLicensesUsersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConsumedLicensesUsersInner(val *GetConsumedLicensesUsersInner) *NullableGetConsumedLicensesUsersInner {
	return &NullableGetConsumedLicensesUsersInner{value: val, isSet: true}
}

func (v NullableGetConsumedLicensesUsersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConsumedLicensesUsersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



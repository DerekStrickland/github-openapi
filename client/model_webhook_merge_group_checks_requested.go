/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// WebhookMergeGroupChecksRequested struct for WebhookMergeGroupChecksRequested
type WebhookMergeGroupChecksRequested struct {
	Action string `json:"action"`
	Installation *SimpleInstallation `json:"installation,omitempty"`
	MergeGroup WebhookMergeGroupChecksRequestedMergeGroup `json:"merge_group"`
	Organization *OrganizationSimple `json:"organization,omitempty"`
	Repository *Repository `json:"repository,omitempty"`
	Sender *SimpleUser `json:"sender,omitempty"`
}

// NewWebhookMergeGroupChecksRequested instantiates a new WebhookMergeGroupChecksRequested object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookMergeGroupChecksRequested(action string, mergeGroup WebhookMergeGroupChecksRequestedMergeGroup) *WebhookMergeGroupChecksRequested {
	this := WebhookMergeGroupChecksRequested{}
	this.Action = action
	this.MergeGroup = mergeGroup
	return &this
}

// NewWebhookMergeGroupChecksRequestedWithDefaults instantiates a new WebhookMergeGroupChecksRequested object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookMergeGroupChecksRequestedWithDefaults() *WebhookMergeGroupChecksRequested {
	this := WebhookMergeGroupChecksRequested{}
	return &this
}

// GetAction returns the Action field value
func (o *WebhookMergeGroupChecksRequested) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *WebhookMergeGroupChecksRequested) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *WebhookMergeGroupChecksRequested) SetAction(v string) {
	o.Action = v
}

// GetInstallation returns the Installation field value if set, zero value otherwise.
func (o *WebhookMergeGroupChecksRequested) GetInstallation() SimpleInstallation {
	if o == nil || o.Installation == nil {
		var ret SimpleInstallation
		return ret
	}
	return *o.Installation
}

// GetInstallationOk returns a tuple with the Installation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookMergeGroupChecksRequested) GetInstallationOk() (*SimpleInstallation, bool) {
	if o == nil || o.Installation == nil {
		return nil, false
	}
	return o.Installation, true
}

// HasInstallation returns a boolean if a field has been set.
func (o *WebhookMergeGroupChecksRequested) HasInstallation() bool {
	if o != nil && o.Installation != nil {
		return true
	}

	return false
}

// SetInstallation gets a reference to the given SimpleInstallation and assigns it to the Installation field.
func (o *WebhookMergeGroupChecksRequested) SetInstallation(v SimpleInstallation) {
	o.Installation = &v
}

// GetMergeGroup returns the MergeGroup field value
func (o *WebhookMergeGroupChecksRequested) GetMergeGroup() WebhookMergeGroupChecksRequestedMergeGroup {
	if o == nil {
		var ret WebhookMergeGroupChecksRequestedMergeGroup
		return ret
	}

	return o.MergeGroup
}

// GetMergeGroupOk returns a tuple with the MergeGroup field value
// and a boolean to check if the value has been set.
func (o *WebhookMergeGroupChecksRequested) GetMergeGroupOk() (*WebhookMergeGroupChecksRequestedMergeGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MergeGroup, true
}

// SetMergeGroup sets field value
func (o *WebhookMergeGroupChecksRequested) SetMergeGroup(v WebhookMergeGroupChecksRequestedMergeGroup) {
	o.MergeGroup = v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *WebhookMergeGroupChecksRequested) GetOrganization() OrganizationSimple {
	if o == nil || o.Organization == nil {
		var ret OrganizationSimple
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookMergeGroupChecksRequested) GetOrganizationOk() (*OrganizationSimple, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *WebhookMergeGroupChecksRequested) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given OrganizationSimple and assigns it to the Organization field.
func (o *WebhookMergeGroupChecksRequested) SetOrganization(v OrganizationSimple) {
	o.Organization = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *WebhookMergeGroupChecksRequested) GetRepository() Repository {
	if o == nil || o.Repository == nil {
		var ret Repository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookMergeGroupChecksRequested) GetRepositoryOk() (*Repository, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *WebhookMergeGroupChecksRequested) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given Repository and assigns it to the Repository field.
func (o *WebhookMergeGroupChecksRequested) SetRepository(v Repository) {
	o.Repository = &v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *WebhookMergeGroupChecksRequested) GetSender() SimpleUser {
	if o == nil || o.Sender == nil {
		var ret SimpleUser
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookMergeGroupChecksRequested) GetSenderOk() (*SimpleUser, bool) {
	if o == nil || o.Sender == nil {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *WebhookMergeGroupChecksRequested) HasSender() bool {
	if o != nil && o.Sender != nil {
		return true
	}

	return false
}

// SetSender gets a reference to the given SimpleUser and assigns it to the Sender field.
func (o *WebhookMergeGroupChecksRequested) SetSender(v SimpleUser) {
	o.Sender = &v
}

func (o WebhookMergeGroupChecksRequested) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	if o.Installation != nil {
		toSerialize["installation"] = o.Installation
	}
	if true {
		toSerialize["merge_group"] = o.MergeGroup
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.Sender != nil {
		toSerialize["sender"] = o.Sender
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookMergeGroupChecksRequested struct {
	value *WebhookMergeGroupChecksRequested
	isSet bool
}

func (v NullableWebhookMergeGroupChecksRequested) Get() *WebhookMergeGroupChecksRequested {
	return v.value
}

func (v *NullableWebhookMergeGroupChecksRequested) Set(val *WebhookMergeGroupChecksRequested) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookMergeGroupChecksRequested) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookMergeGroupChecksRequested) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookMergeGroupChecksRequested(val *WebhookMergeGroupChecksRequested) *NullableWebhookMergeGroupChecksRequested {
	return &NullableWebhookMergeGroupChecksRequested{value: val, isSet: true}
}

func (v NullableWebhookMergeGroupChecksRequested) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookMergeGroupChecksRequested) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


